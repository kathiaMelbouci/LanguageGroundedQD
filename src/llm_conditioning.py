

_traj_example='[{"timestep": 0, "pos": [20.818174997965492, 49.23204549153647], "semantics": {"to the north  of fridge": 21.264911617265376}, "colors": ["pink", {"right": ["gray", 70], "left": ["black", 9], "down": ["black", 190], "up": ["yellow", 129]}]}, {"timestep": 40, "pos": [56.35655721028646, 58.72019449869791], "semantics": {}, "colors": ["pink", {"right": ["gray", 70], "left": ["black", 9], "down": ["black", 153], "up": ["yellow", 129]}]}, {"timestep": 80, "pos": [91.18633015950522, 75.68450927734376], "semantics": {}, "colors": ["orange", {"right": ["black", 116], "left": ["yellow", 69], "down": ["gray", 130], "up": ["green", 69]}]}, {"timestep": 120, "pos": [97.47745768229167, 118.49943033854167], "semantics": {"to the north west of statue": 26.258323097983652}, "colors": ["orange", {"right": ["purple", 130], "left": ["black", 83], "down": ["gray", 130], "up": ["green", 69]}]}, {"timestep": 160, "pos": [65.02020772298177, 146.15777587890625], "semantics": {"to the north  of fan": 7.944853010391407}, "colors": ["red", {"right": ["green", 70], "left": ["black", 46], "down": ["yellow", 70], "up": ["black", 9]}]}, {"timestep": 200, "pos": [33.05481719970703, 160.7065912882487], "semantics": {"to the south east of cabinet": 18.302669175401576}, "colors": ["red", {"right": ["green", 70], "left": ["black", 9], "down": ["yellow", 70], "up": ["black", 9]}]}, {"timestep": 240, "pos": [25.741124471028648, 121.62562052408855], "semantics": {}, "colors": ["yellow", {"right": ["black", 41], "left": ["black", 9], "down": ["pink", 130], "up": ["red", 69]}]}, {"timestep": 280, "pos": [60.53137207031249, 101.75295003255208], "semantics": {"on bathtub": 5.385014259061434}, "colors": ["yellow", {"right": ["orange", 70], "left": ["black", 9], "down": ["black", 116], "up": ["black", 83]}]}, {"timestep": 320, "pos": [93.50303141276042, 114.1073710123698], "semantics": {"to the north west of statue": 28.01845019036768}, "colors": ["orange", {"right": ["purple", 130], "left": ["black", 83], "down": ["gray", 130], "up": ["green", 69]}]}, {"timestep": 360, "pos": [65.66576131184895, 142.8917999267578], "semantics": {"on fan": 6.361081516475077}, "colors": ["red", {"right": ["green", 70], "left": ["black", 46], "down": ["yellow", 70], "up": ["black", 9]}]}, {"timestep": 399, "pos": [35.575538635253906, 163.30083719889322], "semantics": {"to the south east of cabinet": 17.87212656109445}, "colors": ["red", {"right": ["green", 70], "left": ["black", 9], "down": ["yellow", 70], "up": ["black", 9]}]}]'


def generate_conditioning(traj_dict):

    prompt_conditioning_0=f"Let us consider a square of size 200x200. The origin is fixed at the bottom left corner, and the x,y axes are respectively horizontal and vertical (with x looking towards the right, and y looking upwards). Let us define a python dictionary to represent point that have been sampled from a 2d trajector in that square. The dictionary will have the following keys: dict_keys(['timestep', 'pos', 'semantics', 'colors']). Here is the explanation for each: 1) The complete trajectories are composed of N points, and each has a timestep t_i (with i ranging from 0 to N-1).  The 'timestep' key corresponds to the t_i of the sampled point. 2) the 'pos' key is for the 2d position of the point, expressed as (x,y) in the coordinate frame defined above. 3) The square actually represents a room, where there are several objects such as a fridge, a chair, a cactus and so on. The 'semantics' gives information on objects to which the point are close (name of objects followed by distances to the center of the objects). 4) The room which is represented by the 200x200 square also has tiles of different colors in different areas. The 'colors' key gives information about i) the tile color where the 2d point is ii) the distances to closest areas that have different colors, and the name of those colors. \n An example trajectory, composed of M=11 such points, is as follows: `{traj_dict}`. Let us assume that we want to describe such trajectories with text. Can you please enumerate the different aspects of the problem that are relevant to that, and how that should be done?"

    prompt_conditioning_1=f"Brilliant! Now, your task is as follows: you well receive a single trajectory as the one above in each prompt, and you will return 6 different description for it. The first 4 ones should sound like you are instructing someone (or some agent) to take that trajectory. Please try to be **concise**. For the two other descriptions, it is okay for them not to sound like instructions, but be more descriptional. Please answer with ready if that is clear."


    return [prompt_conditioning_0, prompt_conditioning_1]
